face_rec/
├── app/
│   ├── cfg/
│   │   ├── config.py
│   │   ├── default.yaml
│   │   ├── development.yaml
│   │   ├── __init__.py
│   │   ├── logging.py
│   │   ├── production.yaml
│   │   └── testing.yaml
│   ├── core/
│   │   ├── __init__.py
│   │   └── model_manager.py
│   ├── __init__.py
│   ├── main.py
│   ├── router/
│   │   ├── face_router.py
│   │   └── __init__.py
│   ├── schema/
│   │   ├── face_schema.py
│   │   └── __init__.py
│   ├── service/
│   │   ├── face_dao.py
│   │   ├── face_service.py
│   │   └── __init__.py
│   └── static/
│       └── swagger-ui/
│           ├── swagger-ui-bundle.js
│           └── swagger-ui.css
├── data/
│   ├── dev.db
│   ├── faces/
│   │   ├── ds_model_facenet_detector_opencv_aligned_normalization_base_expand_0.pkl
│   │   ├── sn001/
│   │   │   ├── face_sn001_ac93dda5-3a70-47d7-856e-7b67e88df812.jpg
│   │   │   └── face_sn001_db09552b-d5b0-4b32-afeb-3d2de7de0482.jpg
│   │   ├── sn002/
│   │   │   ├── face_sn002_2e31dd3e-1260-4ce9-aad5-dea337d7ce6b.jpg
│   │   │   └── face_sn002_4161dcee-ff7f-4bbb-9aef-a0d49571d10a.jpg
│   │   └── sn003/
│   │       └── face_sn003_32e38d19-b4dd-425e-8f1d-5bd0f6902e83.jpg
│   └── prod.db
├── docker/
│   ├── docker-compose.yml
│   ├── Dockerfile
│   ├── README.md
│   └── start.sh
├── LICENSE
├── logs/
│   ├── app.log
│   ├── dev.log
│   └── prod.log
├── pyproject.toml
├── README.md
├── requirements.txt
├── run.py
├── test.txt
├── ui/
│   ├── test_rtsp.py
│   └── ui.py
└── uv.lock
检查代码是否有优化点，实现一个高性能、易扩展、功能完善的人脸识别项目，核心需求包括:
0.先解决问题：思考最佳实践，保证推理高性能易扩展;重新思考，解决问题并修改时整体代码怎么修改；
1.完整的人脸库功能:增、删、改、查、视频流预测。
2.视频流预测与结果展示:实时识别视频流中的人脸，并将识别框和结果信息绘制在视频上返回。
3.高性能与最佳实践:基于 FastAPI 和 InsightFace，代码清晰、健壮、易于维护;预测性能高速、请求响应快速;
4.参考现有架构和代码，思考代码逻辑与实现，思考是否有优化点。
5、重新思考所有代码逻辑，让这个项目符合最佳实践。
6.中文回复，先给出优化方案，再给出修改后的完整代码